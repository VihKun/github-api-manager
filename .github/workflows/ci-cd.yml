name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on push to main
  pull_request:
    branches:
      - main  # Trigger on pull request to main

jobs:
  build:
    runs-on: self-hosted

    steps:
      # Checkout code from GitHub repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.23.4'  # Go version

      # Install dependencies
      - name: Install dependencies
        run: |
          go mod tidy
          go mod vendor

      # Run tests
      - name: Run tests
        env:
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
        run: go test ./...

      # Run linters
      - name: Lint code
        run: go run golang.org/x/lint/golint ./...

      # Security Checks
      - name: Run security checks
        uses: github/super-linter@v4
        env:
          RUN_LOCAL: true

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t github-api-manager .

      # Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker tag github-api-manager ${{ secrets.DOCKER_USERNAME }}/github-api-manager:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/github-api-manager:latest

      # Deploy to Minikube
      - name: Deploy to Kubernetes (Minikube)
        run: |
          kubectl apply -f kubernetes/deployment.yaml
          kubectl set image deployment/github-api-manager github-api-manager=${{ secrets.DOCKER_USERNAME }}/github-api-manager:latest
          kubectl rollout status deployment/github-api-manager
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}